name: Build & Publish (win-x64)

permissions:
  contents: write
  packages: write

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  build-publish:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore

      - name: Build (Release)
        run: dotnet build -c Release --no-restore

      - name: Publish self-contained single-file (win-x64)
        run: |
          dotnet publish -c Release -r win-x64 --self-contained true /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true -o ./publish/win-x64

      - name: Prepare release folder
        run: |
          # create release folder (force)
          New-Item -ItemType Directory -Force -Path release | Out-Null

          if (Test-Path -Path publish/win-x64) {
            Copy-Item -Path (Join-Path 'publish/win-x64' '*') -Destination release -Recurse -Force -ErrorAction SilentlyContinue
          }

          if (Test-Path -Path config.sample.json) {
            Copy-Item -Path config.sample.json -Destination (Join-Path 'release' 'config.sample.json') -Force
          }

          if (Test-Path -Path README.md) {
            Copy-Item -Path README.md -Destination (Join-Path 'release' 'README.md') -Force
          }
          
          if (Test-Path -Path templates) {
            Copy-Item -Path templates -Destination release\templates -Recurse -Force -ErrorAction SilentlyContinue
          }
          
          if (Test-Path -Path general) {
          Copy-Item -Path general -Destination release\general -Recurse -Force -ErrorAction SilentlyContinue
          }
          
          if (Test-Path -Path LICENSE) { Copy-Item -Path LICENSE -Destination release\LICENSE -Force }
          if (Test-Path -Path 'CONFIG_EXPLAIN.txt') { Copy-Item -Path 'CONFIG_EXPLAIN.txt' -Destination 'release/CONFIG_EXPLAIN.txt' -Force }
        shell: pwsh

      - name: Zip release
        run: |
          powershell -Command "Compress-Archive -Path release/* -DestinationPath release/dayz-fishing-bot-win-x64.zip -Force"

      - name: Upload artifact (Actions)
        uses: actions/upload-artifact@v4
        with:
          name: dayz-fishing-bot-win-x64
          path: release/dayz-fishing-bot-win-x64.zip

      - name: Create GitHub Release (on tag push)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: release/dayz-fishing-bot-win-x64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}